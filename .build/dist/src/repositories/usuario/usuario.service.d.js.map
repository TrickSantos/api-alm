{
  "version": 3,
  "sources": ["../../../../../dist/src/repositories/usuario/usuario.service.d.ts"],
  "sourcesContent": ["import { PrismaService } from '@prisma/prisma.service';\nimport { CreateUsuarioDto } from './dto/create-usuario.dto';\nimport { IndexUsuarioDto } from './dto/index-usuario.dto';\nimport { UpdateUsuarioDto } from './dto/update-usuario.dto';\nexport declare class UsuarioService {\n    private prisma;\n    constructor(prisma: PrismaService);\n    private exclude;\n    create(usuario: CreateUsuarioDto): Promise<void>;\n    findAll(data: IndexUsuarioDto): Promise<{\n        nome: string;\n        codigo: string;\n        id: number;\n        email: string;\n        funcao: string;\n        presencas: import(\".prisma/client\").presenca[];\n        clube: import(\".prisma/client\").clube;\n        clubeId: number;\n    }[]>;\n    findById(codigo: string): Promise<import(\".prisma/client\").usuario & {\n        presencas: import(\".prisma/client\").presenca[];\n        clube: import(\".prisma/client\").clube;\n    }>;\n    findOne(email: string): Promise<Omit<import(\".prisma/client\").usuario & {\n        presencas: import(\".prisma/client\").presenca[];\n        clube: import(\".prisma/client\").clube;\n    }, \"password\">>;\n    validateUser(email: string): Promise<import(\".prisma/client\").usuario & {\n        presencas: import(\".prisma/client\").presenca[];\n        clube: import(\".prisma/client\").clube;\n    }>;\n    update(id: number, usuario: UpdateUsuarioDto): Promise<Omit<import(\".prisma/client\").usuario & {\n        presencas: import(\".prisma/client\").presenca[];\n        clube: import(\".prisma/client\").clube;\n    }, \"password\">>;\n    remove(id: number): Promise<import(\".prisma/client\").usuario>;\n}\n"],
  "mappings": ";;AAAA;",
  "names": []
}
