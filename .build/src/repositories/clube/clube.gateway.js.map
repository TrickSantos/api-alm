{
  "version": 3,
  "sources": ["../../../../src/repositories/clube/clube.gateway.ts"],
  "sourcesContent": ["import {\n  WebSocketGateway,\n  SubscribeMessage,\n  MessageBody,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { Server } from 'socket.io';\nimport { ClubeService } from './clube.service';\nimport { CreateClubeDto } from './dto/create-clube.dto';\nimport { UpdateClubeDto } from './dto/update-clube.dto';\n\n@WebSocketGateway({\n  cors: '*:*',\n})\n/* @UseGuards(WsAuthGuard) */\nexport class ClubeGateway {\n  constructor(private readonly clubeService: ClubeService) {}\n\n  @WebSocketServer()\n  server: Server;\n\n  @SubscribeMessage('clube:create')\n  async create(@MessageBody() createClubeDto: CreateClubeDto) {\n    await this.clubeService.create(createClubeDto);\n    this.server.emit('clube:created');\n    return { status: 'sucess', message: ['Clube salvo com sucesso!'] };\n  }\n\n  @SubscribeMessage('clube:index')\n  async findAll() {\n    return this.clubeService.findAll();\n  }\n\n  @SubscribeMessage('clube:find')\n  async findOne(@MessageBody() id: number) {\n    return this.clubeService.findOne(id);\n  }\n\n  @SubscribeMessage('clube:update')\n  async update(@MessageBody() updateClubeDto: UpdateClubeDto) {\n    await this.clubeService.update(updateClubeDto.id, updateClubeDto);\n    this.server.emit('clube:updated');\n    return { status: 'sucess', message: ['Clube salvo com sucesso!'] };\n  }\n\n  @SubscribeMessage('clube:destroy')\n  async remove(@MessageBody() id: number) {\n    this.clubeService.remove(id);\n    this.server.emit('clube:destroyed');\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAKO;AAUA,yBAAmB;AAAA,EACxB,YAA6B,cAA4B;AAA5B;AAAA;AAAA,QAMvB,OAAsB,gBAAgC;AAC1D,UAAM,KAAK,aAAa,OAAO;AAC/B,SAAK,OAAO,KAAK;AACjB,WAAO,EAAE,QAAQ,UAAU,SAAS,CAAC;AAAA;AAAA,QAIjC,UAAU;AACd,WAAO,KAAK,aAAa;AAAA;AAAA,QAIrB,QAAuB,IAAY;AACvC,WAAO,KAAK,aAAa,QAAQ;AAAA;AAAA,QAI7B,OAAsB,gBAAgC;AAC1D,UAAM,KAAK,aAAa,OAAO,eAAe,IAAI;AAClD,SAAK,OAAO,KAAK;AACjB,WAAO,EAAE,QAAQ,UAAU,SAAS,CAAC;AAAA;AAAA,QAIjC,OAAsB,IAAY;AACtC,SAAK,aAAa,OAAO;AACzB,SAAK,OAAO,KAAK;AAAA;AAAA;AA7BnB;AAAA,EADC;AAAA,GACD,AAJK,aAIL;AAGM;AAAA,EADL,wCAAiB;AAAA,EACJ;AAAA,GAAR,AAPD,aAOC;AAOA;AAAA,EADL,wCAAiB;AAAA,GACZ,AAdD,aAcC;AAKA;AAAA,EADL,wCAAiB;AAAA,EACH;AAAA,GAAT,AAnBD,aAmBC;AAKA;AAAA,EADL,wCAAiB;AAAA,EACJ;AAAA,GAAR,AAxBD,aAwBC;AAOA;AAAA,EADL,wCAAiB;AAAA,EACJ;AAAA,GAAR,AA/BD,aA+BC;AA/BD;AAAA,EAJN,wCAAiB;AAAA,IAChB,MAAM;AAAA;AAAA,GAGD;",
  "names": []
}
