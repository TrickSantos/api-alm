{
  "version": 3,
  "sources": ["../../../../src/repositories/evento/evento.module.ts"],
  "sourcesContent": ["import { Module } from '@nestjs/common';\nimport { EventoService } from './evento.service';\nimport { EventoGateway } from './evento.gateway';\nimport { PrismaModule } from '@prisma/prisma.module';\nimport { BullModule, InjectQueue } from '@nestjs/bull';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { EventoProducerService } from './jobs/evento.producer';\nimport { EventoConsumer } from './jobs/evento.consumer';\nimport { MiddlewareBuilder } from '@nestjs/core';\nimport { Queue } from 'bull';\nimport { createBullBoard } from 'bull-board';\nimport { BullAdapter } from 'bull-board/bullAdapter';\n\n@Module({\n  imports: [\n    PrismaModule,\n    BullModule.registerQueue({\n      name: 'evento',\n    }),\n    EventEmitterModule.forRoot(),\n    ScheduleModule.forRoot(),\n  ],\n  providers: [\n    EventoGateway,\n    EventoService,\n    EventoProducerService,\n    EventoConsumer,\n  ],\n})\nexport class EventoModule {\n  constructor(@InjectQueue('evento') private queue: Queue) {}\n\n  configure(consumer: MiddlewareBuilder) {\n    const { router } = createBullBoard([new BullAdapter(this.queue)]);\n    consumer.apply(router).forRoutes('/admin/queues');\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,oBAAuB;AACvB,oBAA8B;AAC9B,qBAA8B;AAC9B,oBAA6B;AAC7B,kBAAwC;AACxC,sBAA+B;AAC/B,2BAAmC;AACnC,qBAAsC;AACtC,qBAA+B;AAG/B,wBAAgC;AAChC,yBAA4B;AAkBrB,yBAAmB;AAAA,EACxB,YAA2C,OAAc;AAAd;AAAA;AAAA,EAE3C,UAAU,UAA6B;AACrC,UAAM,EAAE,WAAW,uCAAgB,CAAC,IAAI,+BAAY,KAAK;AACzD,aAAS,MAAM,QAAQ,UAAU;AAAA;AAAA;AAL9B;AAAA,EAhBN,0BAAO;AAAA,IACN,SAAS;AAAA,MACP;AAAA,MACA,uBAAW,cAAc;AAAA,QACvB,MAAM;AAAA;AAAA,MAER,wCAAmB;AAAA,MACnB,+BAAe;AAAA;AAAA,IAEjB,WAAW;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA,EAIW,gDAAY;AAAA,GADpB;",
  "names": []
}
