{
  "version": 3,
  "sources": ["../../../../src/repositories/presenca/presenca.gateway.ts"],
  "sourcesContent": ["import {\n  WebSocketGateway,\n  SubscribeMessage,\n  MessageBody,\n  WebSocketServer,\n} from '@nestjs/websockets';\nimport { Server } from 'socket.io';\nimport { PresencaService } from './presenca.service';\nimport { CreatePresencaDto } from './dto/create-presenca.dto';\nimport { WsAuthGuard } from 'auth/guards/ws.guard';\nimport {\n  UseFilters,\n  UseGuards,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { WsExceptionFilter } from 'ws.filter';\nimport { Presencas } from './dto/presenca.dto';\n\n@WebSocketGateway({\n  cors: '*:*',\n})\n@UseGuards(WsAuthGuard)\n@UseFilters(new WsExceptionFilter())\n@UsePipes(new ValidationPipe({ transform: true }))\nexport class PresencaGateway {\n  constructor(private readonly presencaService: PresencaService) {}\n\n  @WebSocketServer()\n  server: Server;\n\n  @SubscribeMessage('presenca:create')\n  async create(@MessageBody() createPresencaDto: CreatePresencaDto) {\n    let clube = await this.presencaService.verificaPorcentagem(\n      createPresencaDto,\n    );\n\n    if (clube.porcentagem === 100) {\n      return { status: 'sucess', message: ['Presenca salva com sucesso!'] };\n    }\n\n    await this.presencaService.create(createPresencaDto);\n    this.server.emit('presenca:created');\n    clube = await this.presencaService.verificaPorcentagem(createPresencaDto);\n\n    if (clube.porcentagem === 100) {\n      this.server.emit('ganhador', clube);\n      return { status: 'sucess', message: ['Presenca salva com sucesso!'] };\n    }\n  }\n\n  @SubscribeMessage('presenca:index')\n  findAll() {\n    return this.presencaService.findAll();\n  }\n\n  @SubscribeMessage('presenca:getPresences')\n  getPresences(@MessageBody() id: number) {\n    return this.presencaService.getPresencasByEventId(id);\n  }\n\n  @SubscribeMessage('presenca:find')\n  findOne(@MessageBody() id: number) {\n    return this.presencaService.findOne(id);\n  }\n\n  @SubscribeMessage('presenca:destroy')\n  async remove(@MessageBody() id: number) {\n    await this.presencaService.remove(id);\n    this.server.emit('presenca:destroyed');\n  }\n\n  @SubscribeMessage('ganhador')\n  ganhador(@MessageBody() presenca: Presencas) {\n    this.server.emit('ganhador', presenca);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,wBAKO;AAIP,gBAA4B;AAC5B,oBAKO;AACP,iBAAkC;AAS3B,4BAAsB;AAAA,EAC3B,YAA6B,iBAAkC;AAAlC;AAAA;AAAA,QAMvB,OAAsB,mBAAsC;AAChE,QAAI,QAAQ,MAAM,KAAK,gBAAgB,oBACrC;AAGF,QAAI,MAAM,gBAAgB,KAAK;AAC7B,aAAO,EAAE,QAAQ,UAAU,SAAS,CAAC;AAAA;AAGvC,UAAM,KAAK,gBAAgB,OAAO;AAClC,SAAK,OAAO,KAAK;AACjB,YAAQ,MAAM,KAAK,gBAAgB,oBAAoB;AAEvD,QAAI,MAAM,gBAAgB,KAAK;AAC7B,WAAK,OAAO,KAAK,YAAY;AAC7B,aAAO,EAAE,QAAQ,UAAU,SAAS,CAAC;AAAA;AAAA;AAAA,EAKzC,UAAU;AACR,WAAO,KAAK,gBAAgB;AAAA;AAAA,EAI9B,aAA4B,IAAY;AACtC,WAAO,KAAK,gBAAgB,sBAAsB;AAAA;AAAA,EAIpD,QAAuB,IAAY;AACjC,WAAO,KAAK,gBAAgB,QAAQ;AAAA;AAAA,QAIhC,OAAsB,IAAY;AACtC,UAAM,KAAK,gBAAgB,OAAO;AAClC,SAAK,OAAO,KAAK;AAAA;AAAA,EAInB,SAAwB,UAAqB;AAC3C,SAAK,OAAO,KAAK,YAAY;AAAA;AAAA;AA7C/B;AAAA,EADC;AAAA,GACD,AAJK,gBAIL;AAGM;AAAA,EADL,wCAAiB;AAAA,EACJ;AAAA,GAAR,AAPD,gBAOC;AAoBN;AAAA,EADC,wCAAiB;AAAA,GAClB,AA3BK,gBA2BL;AAKA;AAAA,EADC,wCAAiB;AAAA,EACJ;AAAA,GAAd,AAhCK,gBAgCL;AAKA;AAAA,EADC,wCAAiB;AAAA,EACT;AAAA,GAAT,AArCK,gBAqCL;AAKM;AAAA,EADL,wCAAiB;AAAA,EACJ;AAAA,GAAR,AA1CD,gBA0CC;AAMN;AAAA,EADC,wCAAiB;AAAA,EACR;AAAA,GAAV,AAhDK,gBAgDL;AAhDK;AAAA,EANN,wCAAiB;AAAA,IAChB,MAAM;AAAA;AAAA,EAEP,6BAAU;AAAA,EACV,8BAAW,IAAI;AAAA,EACf,4BAAS,IAAI,6BAAe,EAAE,WAAW;AAAA,GACnC;",
  "names": []
}
